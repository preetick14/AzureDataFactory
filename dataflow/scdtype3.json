{
	"name": "scdtype3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SalesRepSTG3",
						"type": "DatasetReference"
					},
					"name": "SalesRepSTG3"
				},
				{
					"dataset": {
						"referenceName": "DimSalesRep3",
						"type": "DatasetReference"
					},
					"name": "DimSalesRep3"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DimSalesRep3",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "split1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          SalesRep_Key as integer,",
				"          SalesRep_Number as integer,",
				"          SalesRep_Name as string,",
				"          SalesRep_Department as string,",
				"          Current_Flag as integer,",
				"          VerifyField as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SalesRepSTG3",
				"source(output(",
				"          SalesRep_Key as integer,",
				"          SalesRep_Number as integer,",
				"          SalesRep_Name as string,",
				"          SalesRep_Department as string,",
				"          Current_Flag as integer,",
				"          VerifyField as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DimSalesRep3",
				"SalesRepSTG3, DimSalesRep3 join(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 split(!isNull(DimSalesRep3@SalesRep_Number) && (SalesRepSTG3@SalesRep_Name != DimSalesRep3@SalesRep_Name || SalesRepSTG3@SalesRep_Department != DimSalesRep3@SalesRep_Department),",
				"     isNull(DimSalesRep3@SalesRep_Number),",
				"     disjoint: false) ~> split1@(ForUpdate, Forinstert)",
				"split1@Forinstert derive(icurrentflag = 1,",
				"          iverifyfield = 'New') ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          SalesRep_Key as integer,",
				"          SalesRep_Number as integer,",
				"          SalesRep_Name as string,",
				"          SalesRep_Department as string,",
				"          Current_Flag as integer,",
				"          VerifyField as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          SalesRep_Number = split1@Forinstert@SalesRep_Number,",
				"          SalesRep_Name = split1@Forinstert@SalesRep_Name,",
				"          SalesRep_Department = split1@Forinstert@SalesRep_Department,",
				"          Current_Flag = icurrentflag,",
				"          VerifyField = iverifyfield",
				"     )) ~> sink1"
			]
		}
	}
}